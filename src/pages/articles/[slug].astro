---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  
  return articles.map((article) => {
    return {
      params: { slug: article.slug },
      props: { article }
    };
  });
}

const { article } = Astro.props;
const { Content } = await article.render();

// Format date for display
function formatDate(dateString: string) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout>
  <article class="min-h-screen bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <header class="mb-12">
        <a href="/articles" class="text-blue-600 hover:text-blue-800 font-medium mb-8 inline-block">
          ‚Üê Back to articles
        </a>
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
          {article.data.title}
        </h1>
        
        <div class="flex items-center text-gray-600 space-x-6 mb-8">
          {article.data.publishedOn && (
            <time datetime={article.data.publishedOn.toISOString()}>
              {formatDate(article.data.publishedOn.toISOString())}
            </time>
          )}
        </div>

        {article.data.featuredImage && (
          <div class="mb-12">
            <img 
              src={article.data.featuredImage} 
              alt={article.data.title}
              class="w-full h-auto "
            />
          </div>
        )}
      </header>
      
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
      
      {article.data.authorSource && (
        <footer class="mt-12 pt-8 border-t border-gray-200">
          <div class="prose prose-sm text-gray-600">
            {article.data.authorSource}
          </div>
        </footer>
      )}
    </div>
  </article>
</Layout>

<style>
  /* Prose styling for article content */
  .prose {
    color: #374151;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #111827;
    font-weight: 700;
    margin-top: 2em;
    margin-bottom: 1em;
  }
  
  .prose p {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    line-height: 1.75;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose strong {
    font-weight: 700;
  }
  
  .prose em {
    font-style: italic;
  }
  
  .prose blockquote {
    border-left: 4px solid #e5e7eb;
    padding-left: 1em;
    margin-left: 0;
    font-style: italic;
    color: #6b7280;
  }
  
  .prose img {
    max-width: 100%;
    height: auto;
    margin: 2em auto;
  }
  
  .prose ul, .prose ol {
    padding-left: 1.625em;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  
  .prose li {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  
  .prose-lg {
    font-size: 1.125rem;
  }
  
  .prose-sm {
    font-size: 0.875rem;
  }
</style>